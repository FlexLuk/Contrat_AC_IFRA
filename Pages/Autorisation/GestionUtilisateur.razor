@using Contrat_AC.AuthetificationState.Data;
@using Contrat_AC.Controller.Autorisation;
@using Contrat_AC.Models.Autorisation;
@inject IAutorisationService authService
@inject IDialogService Dialog

<style>
    .selected {
        background-color: #1E88E5 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }

    .my-custom-class {
        backdrop-filter: blur(10px);
    }
</style>

<MudPaper>
    <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" OverrideStyles="false" Size="Size.Small">
        <MudButton Color="Color.Success" Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Add" OnClick="DialogAjoutUtilisateur">Ajouter</MudButton>
        <MudButton Color="Color.Warning" Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Edit">Modifier </MudButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.DeleteForever">Supprimer</MudButton>
    </MudButtonGroup>
</MudPaper>

<MudTable Items="@users" Dense="true" Hover="true" Bordered="true" Striped="true"
          Filter="new Func<User,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1" Breakpoint="Breakpoint.Sm">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Liste des utilisateurs</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Recherche" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>NOM</MudTh>
        <MudTh>PRENOM</MudTh>
        <MudTh>EMAIL</MudTh>
        <MudTh>DATE DE CREATION</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.UserId</MudTd>
        <MudTd DataLabel="NOM">@context.FirstName</MudTd>
        <MudTd DataLabel="PRENOM">@context.LastName</MudTd>
        <MudTd DataLabel="EMAIL">@context.AdressMail</MudTd>
        <MudTd DataLabel="DATE DE CREATION">@context.DateCreate</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <div style="min-width:200px;">
        <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.FirstName</MudText>
    </div>
</div>
@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private User selectedItem1 = null;
    private HashSet<User> selectedItems = new HashSet<User>();
    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true, CloseButton = true, DisableBackdropClick=true };

    private IEnumerable<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        users = await authService.GetAllUsersAsync();
    }

    private bool FilterFunc1(User element) => FilterFunc(element, searchString1);

    private bool FilterFunc(User element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.UserId.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.AdressMail.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.FirstName} {element.LastName} {element.AdressMail}".Contains(searchString))
            return true;
        return false;
    }

    private void DialogAjoutUtilisateur()
    {
        Dialog.Show<DialogAjoutUtilisateur>("Ajout d'un nouveau utilisateur", maxWidth);

    }
}